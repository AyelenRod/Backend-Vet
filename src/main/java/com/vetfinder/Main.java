package com.vetfinder;

import io.javalin.Javalin;
import com.vetfinder.di.AppModule;
import com.vetfinder.config.DatabaseConfig;

/**
 * Main.java CORREGIDO - Con m√≥dulos necesarios para el frontend
 * ACCI√ìN: REEMPLAZAR el archivo Main.java actual por este c√≥digo
 */
public class Main {
    public static void main(String[] args) {
        try {
            System.out.println("=== VetFinder API - Iniciando servidor ===");

            // Inicializar base de datos
            System.out.println("Inicializando base de datos...");
            DatabaseConfig.initialize();
            System.out.println("‚úÖ Base de datos inicializada");

            // Obtener puerto del entorno o usar 7000 por defecto
            int port = Integer.parseInt(System.getenv().getOrDefault("SERVER_PORT", "7000"));

            // Crear aplicaci√≥n Javalin
            Javalin app = Javalin.create(config -> {
                config.plugins.enableCors(cors -> {
                    cors.add(it -> {
                        it.anyHost();
                        it.allowCredentials = true;
                    });
                });
            });

            // Shutdown hook
            Runtime.getRuntime().addShutdownHook(new Thread(() -> {
                System.out.println("Cerrando aplicaci√≥n...");
                DatabaseConfig.closeDataSource();
                app.stop();
            }));

            System.out.println("=== Registrando endpoints de la API ===");

            // Rutas b√°sicas de prueba
            app.get("/", ctx -> {
                System.out.println("‚úÖ Endpoint / ejecutado correctamente");
                ctx.json(java.util.Map.of(
                        "status", "ok",
                        "message", "VetFinder API funcionando correctamente",
                        "timestamp", System.currentTimeMillis()
                ));
            });

            app.get("/test", ctx -> {
                System.out.println("‚úÖ Endpoint /test ejecutado correctamente");
                ctx.json(java.util.Map.of(
                        "test", "success",
                        "database", DatabaseConfig.testConnection()
                ));
            });

            // REGISTRAR M√ìDULOS NECESARIOS PARA EL FRONTEND
            try {
                // ========== M√ìDULOS B√ÅSICOS (CAT√ÅLOGOS) ==========
                System.out.println("üìù Registrando ROL...");
                AppModule.initRoles().register(app);
                System.out.println("‚úÖ ROL registrado");

                System.out.println("‚ö• Registrando SEXO...");
                AppModule.initSexos().register(app);
                System.out.println("‚úÖ SEXO registrado");

                System.out.println("üéì Registrando ESPECIALIDAD...");
                AppModule.initEspecialidades().register(app);
                System.out.println("‚úÖ ESPECIALIDAD registrado");

                System.out.println("üíº Registrando SERVICIO...");
                AppModule.initServicios().register(app);
                System.out.println("‚úÖ SERVICIO registrado");

                System.out.println("üìç Registrando DIRECCION...");
                AppModule.initDirecciones().register(app);
                System.out.println("‚úÖ DIRECCION registrado");

                // ========== M√ìDULOS PRINCIPALES (REQUERIDOS POR FRONTEND) ==========
                System.out.println("üë• Registrando USUARIO...");
                AppModule.initUsuarios().register(app);
                System.out.println("‚úÖ USUARIO registrado");

                System.out.println("üêï Registrando MASCOTA...");
                AppModule.initMascotas().register(app);
                System.out.println("‚úÖ MASCOTA registrado");

                System.out.println("ü©∫ Registrando DATO VETERINARIO...");
                AppModule.initDatosVeterinarios().register(app);
                System.out.println("‚úÖ DATO VETERINARIO registrado");

                System.out.println("üè• Registrando CONSULTORIO...");
                AppModule.initConsultorios().register(app);
                System.out.println("‚úÖ CONSULTORIO registrado");

                System.out.println("üìä Registrando ESTAD√çSTICAS...");
                AppModule.initEstadisticas().register(app);
                System.out.println("‚úÖ ESTAD√çSTICAS registrado");

                // ========== M√ìDULOS OPCIONALES (ACTIVAR SI EST√ÅN LISTOS) ==========
                /*
                System.out.println("üìÖ Registrando CITA...");
                AppModule.initCitas().register(app);
                System.out.println("‚úÖ CITA registrado");

                System.out.println("üßæ Registrando FACTURA...");
                AppModule.initFacturas().register(app);
                System.out.println("‚úÖ FACTURA registrado");
                */

            } catch (Exception e) {
                System.err.println("‚ùå Error al registrar m√≥dulo: " + e.getMessage());
                e.printStackTrace();
                // Continuar con el servidor aunque falle un m√≥dulo
            }

            System.out.println("=== DEBUG: Iniciando servidor ===");

            // Iniciar servidor
            app.start("0.0.0.0", port);

            System.out.println("=================================================");
            System.out.println("‚úÖ VetFinder API iniciada CORRECTAMENTE");
            System.out.println("üåê Servidor: http://localhost:" + port);
            System.out.println("=================================================");
            System.out.println("üß™ Endpoints principales disponibles:");
            System.out.println("- GET  http://localhost:" + port + "/ (test b√°sico)");
            System.out.println("- GET  http://localhost:" + port + "/test (test con DB)");
            System.out.println("- POST http://localhost:" + port + "/api/usuarios/login");
            System.out.println("- GET  http://localhost:" + port + "/api/especialidades");
            System.out.println("- GET  http://localhost:" + port + "/api/direcciones");
            System.out.println("- GET  http://localhost:" + port + "/api/servicios");
            System.out.println("- GET  http://localhost:" + port + "/api/usuarios/veterinarios");
            System.out.println("- GET  http://localhost:" + port + "/api/estadisticas/horarios-concurridos");
            System.out.println("=================================================");
            System.out.println("üéØ FRONTEND READY - Todos los endpoints necesarios activos");
            System.out.println("=================================================");

        } catch (Exception e) {
            System.err.println("‚ùå ERROR CR√çTICO:");
            e.printStackTrace();
            System.exit(1);
        }
    }
}